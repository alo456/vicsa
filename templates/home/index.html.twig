{% extends 'base.html.twig' %}
{% block title %} Dashboard {% endblock %}
{% block stylesheets %}
    <link href="{{asset('css/vendors/jquery-ui.css')}}" rel="stylesheet">
    <style>
        td{
            background-color:#dc3545;
        }
    </style>
    <style>
        #report { width: 474px; height: 236px; padding: 5px; float : left; display:block; }
        #report h3 { text-align: center; margin: 0; }
        #report2 { width: 474px; height: 236px; padding: 5px; float : left; display:block; }
        #report2 h3 { text-align: center; margin: 0; }
        #pending { width: 466px; height: 472px; padding: 5px;  float : left; display:block; }
        #pending h3 { text-align: center; margin: 0; }
    </style>
{% endblock %}


{% block body %}
    {% embed 'menu.html.twig' %}
        {% block content %}
            <div id="pending" class="ui-widget-content">
                <h3 class="ui-widget-header">Notas Pendientes</h3>
                <button  style=" float: right" type="button" class="btn btn-link" id="generate"><i class="fas fa-file-invoice"></i>&nbspGenerar Excel</button> 
                
                </br>
                <table id="dtBasicExample" class="table"  cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="th-sm">Línea</th>
                            <th class="th-sm">Descripción</th>
                            <th class="th-sm">Precio</th>
                            <th class="contract th-sm">Contrato</th>
                            <th class="th-sm">Nombre del Plan</th>
                            <th class="account th-sm">Cuenta</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for key, pend in pends %}
                            <tr>
                                <td> {{key}} </td>
                                <td> {{pend[0]}} </td>
                                <td> {{pend[1]}} </td>
                                <td> {{pend[2]}} </td>
                                <td> {{pend[3]}} </td>  
                            </tr>   
                        {% endfor %}
                        <tr>
                            <td> <font color="#fff">9512234568 </font> </td>
                            <td> <font color="#fff"> HUAWEI LTE </font></td>
                            <td> <font color="#fff">$5,400 </font></td>
                            <td> <font color="#fff">Contrato</font></td>
                            <td> <font color="#fff">Plan </font></td>
                            <td> <font color="#fff">Activacion </font></td>
                        </tr>
                        <tr>
                            <td> <font color="#fff">9512234568 </font> </td>
                            <td> <font color="#fff"> HUAWEI LTE </font></td>
                            <td> <font color="#fff">$5,400 </font></td>
                            <td> <font color="#fff">Contrato</font></td>
                            <td> <font color="#fff">Plan </font></td>
                            <td> <font color="#fff">Activacion </font></td>
                        </tr>
                        <tr>
                            <td> <font color="#fff">9512234568 </font> </td>
                            <td> <font color="#fff"> HUAWEI LTE </font></td>
                            <td> <font color="#fff">$5,400 </font></td>
                            <td> <font color="#fff">Contrato</font></td>
                            <td> <font color="#fff">Plan </font></td>
                            <td> <font color="#fff">Activacion </font></td>
                        </tr>
                        <tr>
                            <td> <font color="#fff">9512234568 </font> </td>
                            <td> <font color="#fff"> HUAWEI LTE </font></td>
                            <td> <font color="#fff">$5,400 </font></td>
                            <td> <font color="#fff">Contrato</font></td>
                            <td> <font color="#fff">Plan </font></td>
                            <td> <font color="#fff">Activacion </font></td>
                        </tr>
                        <tr>
                            <td> <font color="#fff">9512234568 </font> </td>
                            <td> <font color="#fff"> HUAWEI LTE </font></td>
                            <td> <font color="#fff">$5,400 </font></td>
                            <td> <font color="#fff">Contrato</font></td>
                            <td> <font color="#fff">Plan </font></td>
                            <td> <font color="#fff">Activacion </font></td>
                        </tr>
                    </tbody>

                </table>
            </div>
            <div id="report" class="ui-widget-content">
                <h3 class="ui-widget-header">Reporte Semanal</h3>
                <div style="width:95%;">
                    <canvas id="canvas"></canvas>
                </div>
            </div>
            <div id="report2" class="ui-widget-content">
                <h3 class="ui-widget-header">Reporte Mensual</h3>
                <div style="width:95%;">
                    <canvas id="canvas2"></canvas>
                </div>
            </div>



        {% endblock %}
    {% endembed %}
{% endblock %}



{% block javascripts %}
    <script src="{{asset('js/vendors/jquery-ui.js')}}"></script>
    <script>
        var lineChartData = {
            labels: ['LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADO', 'DOMINGO'],
            datasets: [{
                    label: 'VENTAS',
                    borderColor: window.chartColors.red,
                    backgroundColor: window.chartColors.red,
                    fill: false,
                    data: [
                            {{ sales[1] }},
                            {{ sales[2] }},
                            {{ sales[3] }},
                            {{ sales[4] }},
                            {{ sales[5] }},
                            {{ sales[6] }},
                            {{ sales[7] }}
                        ],
                        yAxisID: 'y-axis-1',
                    }, {
                        label: 'COMPRAS ALMACEN',
                        borderColor: window.chartColors.blue,
                        backgroundColor: window.chartColors.blue,
                        fill: false,
                        data: [
                            {{ purchases[1] }},
                            {{ purchases[2] }},
                            {{ purchases[3] }},
                            {{ purchases[4] }},
                            {{ purchases[5] }},
                            {{ purchases[6] }},
                            {{ purchases[7] }}
                        ],
                        yAxisID: 'y-axis-2'
                    }]
            };

            window.onload = function () {
                var ctx = document.getElementById('canvas').getContext('2d');
                var ctx2 = document.getElementById('canvas2').getContext('2d');
                window.myLine = Chart.Line(ctx, {
                    data: lineChartData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        hoverMode: 'index',
                        stacked: false,
                        scales: {
                            yAxes: [{
                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                    display: true,
                                    position: 'left',
                                    id: 'y-axis-1',
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }, {
                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                    display: true,
                                    position: 'right',
                                    id: 'y-axis-2',
                                    ticks: {
                                        beginAtZero: true
                                    },

                                    // grid line settings
                                    gridLines: {
                                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                                    },
                                },
                            ],
                        }
                    }
                });
                window.myLine = Chart.Line(ctx2, {
                    data: lineChartData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        hoverMode: 'index',
                        stacked: false,
                        scales: {
                            yAxes: [{
                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                    display: true,
                                    position: 'left',
                                    id: 'y-axis-1',
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }, {
                                    type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                    display: true,
                                    position: 'right',
                                    id: 'y-axis-2',
                                    ticks: {
                                        beginAtZero: true
                                    },

                                    // grid line settings
                                    gridLines: {
                                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                                    },
                                },
                            ],
                        }
                    }
                });
            };
    </script>

    <script>

        $(document).ready(function () {
            $('#dtBasicExample')
                    .addClass('nowrap')
                    .dataTable({
                        dom: '<"top"l><f>rt<"bottom"ip><"clear">',
                        pagingType: "full_numbers",
                        language: {
                            paginate: {
                                previous: "<i class='fas fa-backward'> </i>",
                                next: "<i class='fas fa-forward'> </i>",
                                first: "<i class='fas fa-step-backward'> </i>",
                                last: "<i class='fas fa-step-forward'> </i>",
                            }
                        },
                        responsive: true,
                        columnDefs: [
                            {targets: [-1, -3], className: 'dt-body-right'}
                        ]
                    });
        });
        $(function () {
            $("#report").resizable({
                minHeight: 236,
                minWidth: 474,
                maxWidth: 1011
            });
        });
        $(function () {
            $("#report2").resizable({
                minHeight: 235,
                minWidth: 474,
                maxWidth: 1011
            });
        });
        $(function () {
            $("#pending").resizable({
                minHeight: 472,
                minWidth: 466,
                maxWidth: 1011
            });
        });
        $("#generate").click(function(){
            var result = [];
            $($('#dtBasicExample').DataTable().columns(".account").data()[0]).each(function(){
                var account = this.match(/(?<=\>).*(?=\<)/g);
                account = $.trim(account);
               result.push(account); 
            });
            console.log(result);
            $.ajax({
                url:'{{ (path('generate')) }}',
                type: "POST",
                dataType: "json",
                data: {
                    "accounts": "result"
                },
                async: true
                /*success: function (data)
                {
                    console.log(data)
                    $('div#ajax-results').html(data.output);

                }*/
            });
            return false;
            
        });
    </script>

{% endblock %}

